const { loadJson, saveJson } = require('../utils/fileUtils');
const { showMainMenu, sendMessageWithPhoto, showPaginatedProducts } = require('../utils/telegramUtils');
const { getWbProductInfo } = require('./wbService');
const logger = require('../utils/logger');
const { JSON_FILE } = require('../config/config');
const moment = require('moment-timezone');
const { schedulePriceChecks } = require('../utils/scheduler');

const lastCommandTime = {};

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram-–±–æ—Ç–∞.
 * @param {number} chatId - ID —á–∞—Ç–∞.
 * @param {string} article - –ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞.
 */
async function addProduct(bot, chatId, article) {
    if (!/^\d{7,9}$/.test(article)) {
        logger.info(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞—Ä—Ç–∏–∫—É–ª ${article} –¥–ª—è chat_id: ${chatId}`);
        await bot.sendMessage(chatId, '‚ÑπÔ∏è –ê—Ä—Ç–∏–∫—É–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 7 –¥–æ 9 —Ü–∏—Ñ—Ä.', { parse_mode: 'HTML' });
        await showMainMenu(bot, chatId);
        return;
    }

    const data = await loadJson(JSON_FILE);
    data.users[chatId] = data.users[chatId] || { products: {}, notificationInterval: null };

    if (Object.keys(data.users[chatId].products).length >= 50) {
        logger.info(`–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è chat_id: ${chatId}`);
        await bot.sendMessage(chatId, 'üö´ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –≤ 50 —Ç–æ–≤–∞—Ä–æ–≤. –£–¥–∞–ª–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–æ–≤–∞—Ä—ã, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ.', { parse_mode: 'HTML' });
        await showMainMenu(bot, chatId);
        return;
    }

    if (data.users[chatId].products[article]) {
        logger.info(`–¢–æ–≤–∞—Ä ${article} —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è, chat_id: ${chatId}`);
        await bot.sendMessage(chatId, `‚ÑπÔ∏è –¢–æ–≤–∞—Ä ${article} —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è!`, { parse_mode: 'HTML' });
        await showMainMenu(bot, chatId);
        return;
    }

    const waitTimeout = setTimeout(async () => {
        logger.info(`–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è ${article}, chat_id: ${chatId}`);
        await bot.sendMessage(chatId, '‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞...', { parse_mode: 'HTML' });
    }, 5000);

    try {
        const productInfo = await getWbProductInfo(article);
        clearTimeout(waitTimeout);

        if (!productInfo.success) {
            let errorMsg = `
‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º ${article}.

–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞—Ä—Ç–∏–∫—É–ª: <a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">—Å—Å—ã–ª–∫–∞</a>

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
1. –¢–æ–≤–∞—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
2. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Wildberries
3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ VPN.
`;
            if (productInfo.message === '–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç') {
                errorMsg = `‚ùå –¢–æ–≤–∞—Ä —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º ${article} —É–¥–∞–ª—ë–Ω –ø—Ä–æ–¥–∞–≤—Ü–æ–º –Ω–∞ Wildberries –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω.`;
            }
            logger.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä ${article}: ${productInfo.message}, chat_id: ${chatId}`);
            await bot.sendMessage(chatId, errorMsg, { parse_mode: 'HTML' });
            await showMainMenu(bot, chatId);
            return;
        }

        const currentTime = moment().tz('Asia/Bangkok').format('YYYY-MM-DD HH:mm:ss');
        data.users[chatId].products[article] = {
            name: productInfo.name,
            brand: productInfo.brand,
            current_price: productInfo.price,
            quantity: productInfo.quantity, // –î–æ–±–∞–≤–ª—è–µ–º quantity
            rating: productInfo.rating,
            imageUrl: productInfo.imageUrl,
            added_date: currentTime,
            history: [{ date: currentTime, price: productInfo.price, quantity: productInfo.quantity }], // –î–æ–±–∞–≤–ª—è–µ–º quantity –≤ –∏—Å—Ç–æ—Ä–∏—é
        };
        await saveJson(JSON_FILE, data);

        let caption = `
‚úÖ <b>–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω:</b>

üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ: ${productInfo.name}

üè≠ –ë—Ä–µ–Ω–¥: ${productInfo.brand}

‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${productInfo.rating}

üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${productInfo.priceWarning || productInfo.price + ' —Ä—É–±.'}

üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ: ${productInfo.quantity} —à—Ç.

üîó <a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–°—Å—ã–ª–∫–∞</a>
`;
        if (productInfo.rating < 3) {
            caption += '\n‚ö†Ô∏è –¢–æ–≤–∞—Ä –∏–º–µ–µ—Ç –Ω–∏–∑–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥!';
        }
        if (productInfo.quantityWarning) {
            caption += `\n‚ö†Ô∏è ${productInfo.quantityWarning}`;
        }

        await sendMessageWithPhoto(bot, chatId, caption, productInfo.imageUrl);
        await showMainMenu(bot, chatId);
        try {
            await schedulePriceChecks(bot, checkPrices);
            logger.info(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ ${article} –¥–ª—è chat_id: ${chatId}`);
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ ${article} –¥–ª—è chat_id: ${chatId}: ${error.message}`);
        }
        logger.info(`–¢–æ–≤–∞—Ä ${article} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è chat_id: ${chatId}`);
    } catch (error) {
        clearTimeout(waitTimeout);
        logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ ${article} –¥–ª—è chat_id: ${chatId}: ${error.message}`);
        await bot.sendMessage(chatId, `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ ${article}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`, {
            parse_mode: 'HTML',
        });
        await showMainMenu(bot, chatId);
    }
}

/**
 * –£–¥–∞–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram-–±–æ—Ç–∞.
 * @param {number} chatId - ID —á–∞—Ç–∞.
 * @param {string} article - –ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞.
 */
async function removeProduct(bot, chatId, article) {
    logger.info(`–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ ${article} –¥–ª—è chat_id: ${chatId}`);

    try {
        const data = await loadJson(JSON_FILE);
        if (!data.users[chatId] || !data.users[chatId].products[article]) {
            logger.info(`–¢–æ–≤–∞—Ä ${article} –Ω–µ –Ω–∞–π–¥–µ–Ω, chat_id: ${chatId}`);
            await bot.sendMessage(chatId, `‚ÑπÔ∏è –¢–æ–≤–∞—Ä ${article} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö.`, { parse_mode: 'HTML' });
            await showMainMenu(bot, chatId);
            return;
        }

        const productName = data.users[chatId].products[article].name;
        delete data.users[chatId].products[article];
        if (!Object.keys(data.users[chatId].products).length) {
            delete data.users[chatId];
            try {
                await schedulePriceChecks(bot, checkPrices);
                logger.info(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è chat_id: ${chatId}`);
            } catch (error) {
                logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è chat_id: ${chatId}: ${error.message}`);
            }
        }
        await saveJson(JSON_FILE, data);
        await bot.sendMessage(chatId, `üóëÔ∏è –¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω: ${productName} (–∞—Ä—Ç. ${article})`, { parse_mode: 'HTML' });
        await showMainMenu(bot, chatId);
        logger.info(`–¢–æ–≤–∞—Ä ${article} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –¥–ª—è chat_id: ${chatId}`);
    } catch (error) {
        logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ ${article} –¥–ª—è chat_id: ${chatId}: ${error.message}`);
        await bot.sendMessage(chatId, `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ ${article}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`, { parse_mode: 'HTML' });
        await showMainMenu(bot, chatId);
    }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π (1 —Ç–æ–≤–∞—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É).
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram-–±–æ—Ç–∞.
 * @param {number} chatId - ID —á–∞—Ç–∞.
 * @param {number} [page=1] - –ù–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
 */
async function listProducts(bot, chatId, page = 1) {
    const data = await loadJson(JSON_FILE);
    if (!data.users[chatId] || !Object.keys(data.users[chatId].products).length) {
        logger.info(`–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è chat_id: ${chatId}`);
        await bot.sendMessage(chatId, 'üì≠ –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç.', { parse_mode: 'HTML' });
        await showMainMenu(bot, chatId);
        return;
    }

    const products = Object.entries(data.users[chatId].products);
    const totalPages = Math.ceil(products.length);
    const productsPerPage = 1;
    const startIndex = (page - 1) * productsPerPage;
    const endIndex = startIndex + productsPerPage;
    const currentProducts = products.slice(startIndex, endIndex);

    for (const [article, product] of currentProducts) {
        const caption = `
üîπ <b>${product.name}</b>

–ê—Ä—Ç–∏–∫—É–ª: <code>${article}</code>

–¶–µ–Ω–∞: ${product.current_price} —Ä—É–±.

–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ: ${product.quantity} —à—Ç.

–î–æ–±–∞–≤–ª–µ–Ω: ${product.added_date}

<a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–û—Ç–∫—Ä—ã—Ç—å –Ω–∞ WB</a>
`;
        if (product.quantity === 0) {
            caption += '\n‚ö†Ô∏è –¢–æ–≤–∞—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–∫–ª–∞–¥–µ!';
        }
        await sendMessageWithPhoto(bot, chatId, caption, product.imageUrl);
    }

    const keyboard = {
        inline_keyboard: [],
    };

    if (totalPages > 1) {
        const navigationButtons = [];
        if (page > 1) {
            navigationButtons.push({ text: '‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è', callback_data: `page_prev_${page - 1}` });
        }
        if (page < totalPages) {
            navigationButtons.push({ text: '–°–ª–µ–¥—É—é—â–∞—è ‚û°Ô∏è', callback_data: `page_next_${page + 1}` });
        }
        keyboard.inline_keyboard.push(navigationButtons);
    }

    keyboard.inline_keyboard.push([{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main_menu' }]);

    await bot.sendMessage(chatId, `üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page} –∏–∑ ${totalPages}`, {
        reply_markup: keyboard,
        parse_mode: 'HTML',
    });
    logger.info(`–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞–∑–∞–Ω –¥–ª—è chat_id: ${chatId}, —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${page}`);
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ü–µ–Ω—ã –≤—Å–µ—Ö –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram-–±–æ—Ç–∞.
 * @param {number} chatId - ID —á–∞—Ç–∞.
 * @param {boolean} isAuto - –§–ª–∞–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏.
 */
async function checkPrices(bot, chatId, isAuto = false) {
    const data = await loadJson(JSON_FILE);
    if (!data.users[chatId] || !Object.keys(data.users[chatId].products).length) {
        if (!isAuto) {
            try {
                await bot.sendMessage(chatId, '‚ÑπÔ∏è –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.', { parse_mode: 'HTML' });
                await showMainMenu(bot, chatId);
                logger.info(`–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è chat_id: ${chatId}`);
            } catch (error) {
                logger.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–º —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è chat_id: ${chatId}: ${error.message}`);
            }
        }
        return;
    }

    if (!isAuto) {
        try {
            await bot.sendMessage(chatId, 'üîÑ –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ü–µ–Ω...', { parse_mode: 'HTML' });
            logger.info(`–ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω –¥–ª—è chat_id: ${chatId}`);
        } catch (error) {
            logger.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω –¥–ª—è chat_id: ${chatId}: ${error.message}`);
            return;
        }
    }

    let updated = 0;
    const changes = [];

    for (const [article, product] of Object.entries(data.users[chatId].products)) {
        logger.info(`–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞ ${article} –¥–ª—è chat_id: ${chatId}`);
        try {
            const productInfo = await getWbProductInfo(article);
            if (!productInfo.success) {
                let caption = `
‚ùå <b>${product.name}</b>

–ê—Ä—Ç–∏–∫—É–ª: <code>${article}</code>

–û—à–∏–±–∫–∞: ${productInfo.message}

<a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–û—Ç–∫—Ä—ã—Ç—å</a>
`;
                if (productInfo.message === '–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç') {
                    caption = `
üóëÔ∏è <b>${product.name}</b> (–∞—Ä—Ç. <code>${article}</code>) –±—ã–ª —É–¥–∞–ª—ë–Ω –ø—Ä–æ–¥–∞–≤—Ü–æ–º –Ω–∞ Wildberries!

–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω –∏–∑ –≤–∞—à–µ–≥–æ —Å–ø–∏—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.

<a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</a>
`;
                    delete data.users[chatId].products[article];
                    await saveJson(JSON_FILE, data);
                    if (!Object.keys(data.users[chatId].products).length) {
                        delete data.users[chatId];
                        await saveJson(JSON_FILE, data);
                        try {
                            await schedulePriceChecks(bot, checkPrices);
                            logger.info(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è chat_id: ${chatId}`);
                        } catch (error) {
                            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è chat_id: ${chatId}: ${error.message}`);
                        }
                    }
                }
                changes.push({ caption, imageUrl: product.imageUrl });
                continue;
            }

            const oldPrice = product.current_price;
            const oldQuantity = product.quantity || 0; // –î–æ–±–∞–≤–ª—è–µ–º, —É—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ quantity
            const newPrice = productInfo.price;
            const newQuantity = productInfo.quantity;

            let changeMessage = '';
            if (newPrice !== oldPrice) {
                changeMessage += `
–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ${oldPrice} —Ä—É–±.
–ù–æ–≤–∞—è —Ü–µ–Ω–∞: ${newPrice} —Ä—É–±.
–†–∞–∑–Ω–∏—Ü–∞: ${(newPrice - oldPrice).toFixed(2)} —Ä—É–±.
`;
            }
            if (newQuantity !== oldQuantity) {
                changeMessage += `
–°—Ç–∞—Ä–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${oldQuantity} —à—Ç.
–ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${newQuantity} —à—Ç.
–†–∞–∑–Ω–∏—Ü–∞: ${newQuantity - oldQuantity} —à—Ç.
`;
            }

            if (changeMessage) {
                const currentTime = moment().tz('Asia/Bangkok').format('YYYY-MM-DD HH:mm:ss');
                data.users[chatId].products[article].current_price = newPrice;
                data.users[chatId].products[article].quantity = newQuantity;
                data.users[chatId].products[article].imageUrl = productInfo.imageUrl;
                data.users[chatId].products[article].history.push({
                    date: currentTime,
                    price: newPrice,
                    quantity: newQuantity
                });
                const caption = `
üîî <b>${product.name}</b>

–ê—Ä—Ç–∏–∫—É–ª: <code>${article}</code>
${changeMessage}
<a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–û—Ç–∫—Ä—ã—Ç—å</a>
`;
                if (productInfo.quantityWarning) {
                    caption += `\n‚ö†Ô∏è ${productInfo.quantityWarning}`;
                }
                changes.push({ caption, imageUrl: productInfo.imageUrl });
                updated++;
            } else if (isAuto) {
                const caption = `
üîπ <b>${product.name}</b>

–ê—Ä—Ç–∏–∫—É–ª: <code>${article}</code>

–¶–µ–Ω–∞: ${newPrice} —Ä—É–±. (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${newQuantity} —à—Ç. (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

<a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–û—Ç–∫—Ä—ã—Ç—å</a>
`;
                changes.push({ caption, imageUrl: productInfo.imageUrl });
            }
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–≤–∞—Ä–∞ ${article} –¥–ª—è chat_id: ${chatId}: ${error.message}`);
            const caption = `
‚ùå <b>${product.name}</b>

–ê—Ä—Ç–∏–∫—É–ª: <code>${article}</code>

–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–Ω—É –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ

<a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–û—Ç–∫—Ä—ã—Ç—å</a>
`;
            changes.push({ caption, imageUrl: product.imageUrl });
        }
    }

    if (changes.length > 0) {
        await saveJson(JSON_FILE, data);
        for (const change of changes) {
            try {
                await sendMessageWithPhoto(bot, chatId, change.caption, change.imageUrl);
                await new Promise(resolve => setTimeout(resolve, 300));
                logger.info(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è chat_id: ${chatId}, –∞—Ä—Ç–∏–∫—É–ª: ${change.caption.match(/–ê—Ä—Ç–∏–∫—É–ª: <code>(\d+)<\/code>/)?.[1]}`);
            } catch (error) {
                logger.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è chat_id: ${chatId}: ${error.message}`);
            }
        }
        if (!isAuto && updated > 0) {
            try {
                await bot.sendMessage(chatId, `üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updated} –∑–∞–ø–∏—Å–µ–π (—Ü–µ–Ω—ã –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)`, { parse_mode: 'HTML' });
                logger.info(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ ${updated} –∑–∞–ø–∏—Å–µ–π –¥–ª—è chat_id: ${chatId}`);
            } catch (error) {
                logger.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π –¥–ª—è chat_id: ${chatId}: ${error.message}`);
            }
        } else if (!isAuto) {
            try {
                await bot.sendMessage(chatId, '‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π —Ü–µ–Ω –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.', { parse_mode: 'HTML' });
                logger.info(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è chat_id: ${chatId}`);
            } catch (error) {
                logger.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è chat_id: ${chatId}: ${error.message}`);
            }
        }
    } else if (!isAuto) {
        try {
            await bot.sendMessage(chatId, '‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π —Ü–µ–Ω –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.', { parse_mode: 'HTML' });
            logger.info(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è chat_id: ${chatId}`);
        } catch (error) {
            logger.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è chat_id: ${chatId}: ${error.message}`);
        }
    }

    if (!isAuto) {
        try {
            await showMainMenu(bot, chatId);
            logger.info(`–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–∫–∞–∑–∞–Ω–æ –¥–ª—è chat_id: ${chatId}`);
        } catch (error) {
            logger.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è chat_id: ${chatId}: ${error.message}`);
        }
    }
    logger.info(`–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è chat_id: ${chatId}, –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${updated} –∑–∞–ø–∏—Å–µ–π`);
}

module.exports = { addProduct, removeProduct, listProducts, checkPrices };