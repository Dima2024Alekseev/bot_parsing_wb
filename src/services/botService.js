const { loadJson, saveJson } = require('../utils/fileUtils');
const { showMainMenu, sendMessageWithPhoto } = require('../utils/telegramUtils');
const { getWbProductInfo } = require('./wbService');
const logger = require('../utils/logger');
const { JSON_FILE } = require('../config/config');

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram-–±–æ—Ç–∞.
 * @param {number} chatId - ID —á–∞—Ç–∞.
 * @param {string} article - –ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞.
 */
async function addProduct(bot, chatId, article) {
    const data = await loadJson(JSON_FILE);
    data.users[chatId] = data.users[chatId] || { products: {}, notificationInterval: null };
    
    if (data.users[chatId].products[article]) {
        logger.info(`–¢–æ–≤–∞—Ä ${article} —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è, chat_id: ${chatId}`);
        await bot.sendMessage(chatId, `‚ÑπÔ∏è –¢–æ–≤–∞—Ä ${article} —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è!`, { parse_mode: 'HTML' });
        await showMainMenu(bot, chatId);
        return;
    }

    const waitTimeout = setTimeout(async () => {
        logger.info(`–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è ${article}`);
        await bot.sendMessage(chatId, '‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞...', { parse_mode: 'HTML' });
    }, 5000);

    try {
        const productInfo = await getWbProductInfo(article);
        clearTimeout(waitTimeout);

        if (!productInfo.success) {
            logger.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä ${article}: ${productInfo.message}`);
            const errorMsg = `
‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º ${article}.

–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞—Ä—Ç–∏–∫—É–ª: <a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">—Å—Å—ã–ª–∫–∞</a>

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
1. –¢–æ–≤–∞—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
2. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Wildberries
3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ VPN.
`;
            await bot.sendMessage(chatId, errorMsg, { parse_mode: 'HTML' });
            await showMainMenu(bot, chatId);
            return;
        }

        data.users[chatId].products[article] = {
            name: productInfo.name,
            brand: productInfo.brand,
            current_price: productInfo.price,
            rating: productInfo.rating,
            imageUrl: productInfo.imageUrl,
            added_date: new Date().toISOString().slice(0, 19).replace('T', ' '),
            history: [{ date: new Date().toISOString().slice(0, 19).replace('T', ' '), price: productInfo.price }],
        };
        await saveJson(JSON_FILE, data);

        const caption = `
‚úÖ <b>–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω:</b>

üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ: ${productInfo.name}

üè≠ –ë—Ä–µ–Ω–¥: ${productInfo.brand}

‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${productInfo.rating}

üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${productInfo.priceWarning || productInfo.price + ' —Ä—É–±.'}

üîó <a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–°—Å—ã–ª–∫–∞</a>
`;
        await sendMessageWithPhoto(bot, chatId, caption, productInfo.imageUrl);
        await showMainMenu(bot, chatId);
    } catch (error) {
        clearTimeout(waitTimeout);
        logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ ${article}: ${error.message}`);
        await bot.sendMessage(chatId, `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ ${article}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`, {
            parse_mode: 'HTML',
        });
        await showMainMenu(bot, chatId);
    }
}

/**
 * –£–¥–∞–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram-–±–æ—Ç–∞.
 * @param {number} chatId - ID —á–∞—Ç–∞.
 * @param {string} article - –ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞.
 */
async function removeProduct(bot, chatId, article) {
    const data = await loadJson(JSON_FILE);
    if (!data.users[chatId] || !data.users[chatId].products[article]) {
        logger.info(`–¢–æ–≤–∞—Ä ${article} –Ω–µ –Ω–∞–π–¥–µ–Ω, chat_id: ${chatId}`);
        await bot.sendMessage(chatId, `‚ÑπÔ∏è –¢–æ–≤–∞—Ä ${article} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö.`, { parse_mode: 'HTML' });
        await showMainMenu(bot, chatId);
        return;
    }

    const productName = data.users[chatId].products[article].name;
    delete data.users[chatId].products[article];
    if (!Object.keys(data.users[chatId].products).length) {
        delete data.users[chatId]; // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —É –Ω–µ–≥–æ –±–æ–ª—å—à–µ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤
    }
    await saveJson(JSON_FILE, data);
    await bot.sendMessage(chatId, `üóë –¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω: ${productName} (–∞—Ä—Ç. ${article})`, { parse_mode: 'HTML' });
    await showMainMenu(bot, chatId);
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram-–±–æ—Ç–∞.
 * @param {number} chatId - ID —á–∞—Ç–∞.
 */
async function listProducts(bot, chatId) {
    const data = await loadJson(JSON_FILE);
    if (!data.users[chatId] || !Object.keys(data.users[chatId].products).length) {
        logger.info(`–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç, chat_id: ${chatId}`);
        await bot.sendMessage(chatId, 'üì≠ –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç.', { parse_mode: 'HTML' });
        await showMainMenu(bot, chatId);
        return;
    }

    logger.info(`–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤, chat_id: ${chatId}`);
    for (const [article, product] of Object.entries(data.users[chatId].products)) {
        const caption = `
üîπ <b>${product.name}</b>

–ê—Ä—Ç–∏–∫—É–ª: <code>${article}</code>

–¶–µ–Ω–∞: ${product.current_price} —Ä—É–±.

–î–æ–±–∞–≤–ª–µ–Ω: ${product.added_date}

<a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–û—Ç–∫—Ä—ã—Ç—å –Ω–∞ WB</a>
`;
        await sendMessageWithPhoto(bot, chatId, caption, product.imageUrl);
    }
    await showMainMenu(bot, chatId);
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ü–µ–Ω—ã –≤—Å–µ—Ö –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram-–±–æ—Ç–∞.
 * @param {number} chatId - ID —á–∞—Ç–∞.
 * @param {boolean} [isAuto=false] - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞.
 */
async function checkPrices(bot, chatId, isAuto = false) {
    const data = await loadJson(JSON_FILE);
    if (!data.users[chatId] || !Object.keys(data.users[chatId].products).length) {
        logger.info(`–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, chat_id: ${chatId}`);
        await bot.sendMessage(chatId, '‚ÑπÔ∏è –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.', { parse_mode: 'HTML' });
        if (!isAuto) await showMainMenu(bot, chatId);
        return;
    }

    if (!isAuto) {
        await bot.sendMessage(chatId, 'üîÑ –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ü–µ–Ω...', { parse_mode: 'HTML' });
    }

    let updated = 0;
    const changes = [];

    for (const [article, product] of Object.entries(data.users[chatId].products)) {
        logger.info(`–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞ ${article}`);
        const productInfo = await getWbProductInfo(article);
        if (!productInfo.success) {
            const caption = `
‚ùå <b>${product.name}</b>

–ê—Ä—Ç–∏–∫—É–ª: <code>${article}</code>

–û—à–∏–±–∫–∞: ${productInfo.message}

<a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–û—Ç–∫—Ä—ã—Ç—å</a>
`;
            changes.push({ caption, imageUrl: product.imageUrl });
            continue;
        }

        const oldPrice = product.current_price;
        const newPrice = productInfo.price;

        if (newPrice !== oldPrice) {
            data.users[chatId].products[article].current_price = newPrice;
            data.users[chatId].products[article].imageUrl = productInfo.imageUrl;
            data.users[chatId].products[article].history.push({
                date: new Date().toISOString().slice(0, 19).replace('T', ' '),
                price: newPrice,
            });
            const caption = `
üîî <b>${product.name}</b>

–ê—Ä—Ç–∏–∫—É–ª: <code>${article}</code>

–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ${oldPrice} —Ä—É–±.

–ù–æ–≤–∞—è —Ü–µ–Ω–∞: ${newPrice} —Ä—É–±.

–†–∞–∑–Ω–∏—Ü–∞: ${(newPrice - oldPrice).toFixed(2)} —Ä—É–±.

<a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–û—Ç–∫—Ä—ã—Ç—å</a>
`;
            changes.push({ caption, imageUrl: productInfo.imageUrl });
            updated++;
        } else if (isAuto) {
            const caption = `
üîπ <b>${product.name}</b>

–ê—Ä—Ç–∏–∫—É–ª: <code>${article}</code>

–¶–µ–Ω–∞: ${newPrice} —Ä—É–±. (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

<a href="https://www.wildberries.ru/catalog/${article}/detail.aspx">–û—Ç–∫—Ä—ã—Ç—å</a>
`;
            changes.push({ caption, imageUrl: productInfo.imageUrl });
        }
    }

    if (changes.length > 0) {
        await saveJson(JSON_FILE, data);
        for (const change of changes) {
            await sendMessageWithPhoto(bot, chatId, change.caption, change.imageUrl);
        }
        if (!isAuto && updated > 0) {
            await bot.sendMessage(chatId, `üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updated} —Ü–µ–Ω`, { parse_mode: 'HTML' });
        } else if (!isAuto) {
            await bot.sendMessage(chatId, '‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π —Ü–µ–Ω –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.', { parse_mode: 'HTML' });
        }
    } else if (!isAuto) {
        await bot.sendMessage(chatId, '‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π —Ü–µ–Ω –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.', { parse_mode: 'HTML' });
    }

    if (!isAuto) await showMainMenu(bot, chatId);
}

module.exports = { addProduct, removeProduct, listProducts, checkPrices };